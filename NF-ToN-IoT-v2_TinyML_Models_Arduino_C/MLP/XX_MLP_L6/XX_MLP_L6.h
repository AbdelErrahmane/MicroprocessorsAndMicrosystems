
#include "eml_net.h"
static const float XX_MLP_L6_layer_0_biases[6] = { -0.346710f, -0.051448f, -0.147639f, 0.154024f, -0.095899f, -0.251338f };
static const float XX_MLP_L6_layer_0_weights[198] = { 0.038292f, 0.168808f, 0.080245f, 0.007326f, -0.107192f, 0.182640f, -0.048961f, 0.307332f, 0.363727f, -0.091478f, 0.270597f, 0.023057f, 0.053379f, 0.333865f, -0.336507f, -0.323895f, -0.376372f, 0.260936f, 0.218204f, 0.290261f, 0.375459f, 0.234679f, -0.030284f, 0.220144f, -0.299450f, 0.109763f, -0.279782f, 0.348788f, 0.018283f, -0.066794f, -0.184698f, 0.215127f, -0.034399f, 0.053683f, -0.377476f, 0.092284f, 0.087935f, 0.091731f, 0.348090f, 0.142544f, -0.111044f, -0.049310f, 0.155035f, -0.344988f, 0.130823f, 0.133859f, -0.227197f, -0.291093f, -0.144790f, -0.106914f, 0.055067f, -0.048165f, 0.383115f, -0.312156f, -0.228376f, -0.265691f, 0.092267f, -0.193534f, -0.003742f, -0.159160f, -0.267526f, -0.305647f, 0.122631f, -0.283833f, -0.238323f, -0.102971f, 0.251808f, -0.316060f, 0.265102f, -0.316846f, 0.373661f, -0.024582f, 0.374002f, 0.082248f, 0.187693f, -0.361490f, -0.170387f, -0.297863f, -0.159921f, -0.299095f, -0.142794f, -0.067349f, -0.341934f, 0.151068f, 0.052246f, -0.184044f, 0.018237f, -0.318583f, 0.059579f, 0.336825f, -0.142326f, 0.131328f, -0.288842f, 0.169658f, -0.165204f, -0.248468f, 0.067866f, -0.376459f, 0.255358f, -0.388587f, 0.019661f, -0.173631f, 0.184501f, 0.362571f, -0.242584f, 0.059655f, -0.119623f, 0.063383f, -0.217233f, 0.355166f, -0.041479f, 0.271745f, 0.156949f, -0.158904f, 0.246163f, -0.081188f, 0.298962f, 0.063756f, 0.299459f, 0.151034f, 0.176704f, 0.001039f, 0.357782f, 0.112955f, -0.060393f, 0.083462f, -0.377176f, -0.155658f, 0.105664f, -0.473474f, 0.239967f, 1.031730f, -0.285958f, -0.158240f, -0.005799f, -0.627199f, -0.045407f, 0.695416f, 0.119320f, -0.053800f, 0.311077f, -0.103894f, -0.050297f, 0.307454f, 0.240198f, 0.159943f, -0.313608f, 0.329068f, 0.168065f, 0.391328f, -0.274995f, 0.288782f, -0.264762f, 0.090652f, -0.295100f, 0.273000f, 0.241081f, 0.054207f, -0.072811f, -0.337973f, 0.154876f, -0.036444f, 0.174195f, 0.287414f, 0.372840f, 0.279370f, -0.392482f, -0.091125f, 0.180419f, -0.257595f, 0.016066f, -0.349009f, -0.265680f, -0.341741f, 0.230395f, -0.216571f, -0.121516f, 0.335810f, 0.168245f, -0.367256f, -0.263036f, 0.095295f, 0.060582f, -0.205614f, 0.340656f, 0.089402f, 0.027953f, 0.070531f, 0.180523f, -0.147523f, -0.079842f, -0.227617f, -0.246170f, 0.348594f, 0.187919f, -0.015203f, -0.213708f, -0.192056f };
static const float XX_MLP_L6_layer_1_biases[10] = { 0.346512f, 0.413270f, -0.125217f, 0.608723f, -0.032003f, 0.100422f, 0.974608f, -0.169613f, -0.661448f, -0.198026f };
static const float XX_MLP_L6_layer_1_weights[60] = { -0.676291f, -0.621627f, 0.065891f, -0.471482f, -0.201295f, 0.328041f, 0.170128f, 0.205400f, 0.639882f, 0.306491f, -0.755657f, 0.205115f, -0.379357f, -0.491456f, -0.063976f, 0.255126f, -0.219919f, 0.962045f, 0.169082f, 0.900869f, 0.057169f, 0.710656f, 0.427980f, 0.017045f, 0.667603f, 0.445623f, -0.285583f, -0.846593f, -0.420005f, -1.103638f, -0.506670f, -0.172738f, -0.303075f, -0.525710f, -0.626553f, -0.024317f, 0.071278f, 0.133808f, 0.472529f, 0.214019f, 0.433326f, 0.805092f, 0.597026f, -1.102031f, -0.843239f, 0.518618f, -0.133464f, 0.191189f, 0.122727f, -0.216238f, 0.213414f, 0.029150f, 0.637569f, -0.258552f, 0.094070f, 0.325772f, -0.134363f, -0.608214f, -0.674259f, -0.034907f };
static float XX_MLP_L6_buf1[33];
static float XX_MLP_L6_buf2[33];
static const EmlNetLayer XX_MLP_L6_layers[2] = { 
{ 6, 33, XX_MLP_L6_layer_0_weights, XX_MLP_L6_layer_0_biases, EmlNetActivationTanh }, 
{ 10, 6, XX_MLP_L6_layer_1_weights, XX_MLP_L6_layer_1_biases, EmlNetActivationSoftmax } };
static EmlNet XX_MLP_L6 = { 2, XX_MLP_L6_layers, XX_MLP_L6_buf1, XX_MLP_L6_buf2, 33 };

    int32_t
    XX_MLP_L6_predict(const float *features, int32_t n_features)
    {
        return eml_net_predict(&XX_MLP_L6, features, n_features);
    }
    

    int32_t
    XX_MLP_L6_regress(const float *features, int32_t n_features, float *out, int32_t out_length)
    {
        return eml_net_regress(&XX_MLP_L6, features, n_features, out, out_length);
    }
    

    float
    XX_MLP_L6_regress1(const float *features, int32_t n_features)
    {
        return eml_net_regress1(&XX_MLP_L6, features, n_features);
    }
    