
#include "eml_net.h"
static const float X20_MLP_L16_layer_0_biases[16] = { 1.644882f, 0.634643f, -1.165642f, -1.733886f, 1.947112f, -2.665983f, 0.244709f, 0.733511f, 0.640318f, 2.761921f, -0.896084f, 6.395229f, -1.606539f, 1.917321f, -1.487910f, 4.127515f };
static const float X20_MLP_L16_layer_0_weights[256] = { 1.149075f, 3.964259f, -3.159227f, 2.189449f, -5.731570f, 4.389299f, -2.336180f, 1.366585f, 4.613746f, -0.965403f, 5.595112f, 1.436169f, 2.238403f, 1.850770f, -5.441897f, -4.160092f, -5.977098f, 1.209568f, -2.316112f, 0.528516f, 1.377807f, -0.047352f, 3.738097f, -0.204895f, 2.250358f, 4.275097f, 4.051432f, 9.886379f, 0.101644f, -2.437262f, -0.376251f, 6.287723f, -5.424671f, -1.980147f, 1.020189f, 0.628411f, 1.353974f, -4.268079f, -0.010447f, 0.511915f, 0.936616f, 0.217384f, 0.252990f, 0.009430f, -3.257142f, 0.049152f, 0.911999f, -5.566801f, -1.786337f, -2.624066f, -6.328070f, 0.748342f, 0.621103f, -0.210247f, 5.614630f, -3.592544f, 4.920024f, 3.094891f, -13.380173f, 5.141529f, 1.502275f, -2.384236f, 3.260862f, 0.037852f, -0.234880f, 2.049467f, -2.617121f, -0.659206f, 0.312217f, 0.705075f, 2.159718f, -2.557203f, -0.009000f, 0.874615f, -4.224176f, 0.442373f, -2.044025f, 2.685309f, -0.763862f, -0.368085f, -0.122788f, 0.122207f, -0.336638f, 0.183536f, -0.176672f, -0.248534f, -0.152738f, -0.393589f, 0.058706f, 0.656283f, -0.098189f, 1.035630f, -0.302565f, 0.153518f, 0.110424f, -0.317766f, 0.074908f, -0.414426f, 0.289600f, -0.428564f, 0.154937f, -0.200841f, 0.204055f, 0.399657f, -0.217526f, 0.068428f, 0.085145f, 0.065386f, -0.236864f, 0.394467f, -0.044448f, 0.300139f, 0.172753f, -0.174757f, 0.272180f, -0.089476f, 0.329720f, 0.069973f, 0.330569f, 0.166488f, 0.195139f, 0.003975f, 0.394992f, 0.129987f, -0.065692f, 0.091222f, -0.416217f, -0.171401f, 2.538744f, -0.985799f, 2.073443f, -0.868576f, 1.767386f, -1.317837f, 1.939952f, -4.825977f, 0.053548f, 0.770376f, -1.878519f, 1.341307f, 0.324391f, -1.556955f, -1.558296f, 1.940072f, -0.570005f, 1.343759f, -3.929117f, -0.401095f, 0.507757f, -0.697241f, -1.346930f, 5.627799f, 0.218637f, 1.687546f, 0.913024f, 4.322329f, -0.963252f, 3.464239f, -0.773381f, 1.870505f, 0.152140f, 0.568272f, 0.465322f, 0.422983f, 0.383048f, -0.435715f, -0.433949f, -1.297829f, 0.827574f, 0.597109f, 0.057987f, 2.036174f, 0.248872f, -0.436707f, 0.232246f, 0.026234f, -0.139001f, 0.401662f, 0.184506f, -0.403176f, -0.304379f, 0.053605f, 0.065429f, -0.217433f, 0.376216f, 0.126858f, 0.040001f, 0.145747f, 0.195584f, -0.179668f, -0.078076f, -0.235627f, 2.350638f, -0.979160f, -5.612669f, -1.843224f, 0.273334f, 1.256547f, 0.646141f, -1.160178f, 1.102684f, 0.962880f, -1.967450f, 2.107463f, -1.217426f, -0.914962f, -0.195650f, 1.998764f, -0.969080f, 1.626969f, 4.385115f, -0.107305f, 1.848950f, -3.192667f, -0.762416f, 2.854421f, -1.556881f, 0.663913f, 1.180257f, 1.730487f, -0.792240f, 2.830356f, -1.734406f, 1.736406f, -0.272224f, 0.392129f, 0.162741f, -0.245960f, 0.387228f, 0.199909f, -0.212916f, -0.248301f, 0.015753f, -0.410783f, -0.253330f, -0.065224f, -0.108627f, -0.031671f, -0.192560f, 0.075159f, 0.317032f, -0.328625f, 0.028151f, -0.283795f, 0.185214f, -0.095959f, 0.050895f, -0.273008f, -0.307631f, 0.037299f, -0.123212f, 0.383084f, 0.205273f, 0.214345f, 0.349512f, -0.357448f };
static const float X20_MLP_L16_layer_1_biases[10] = { 3.377106f, 0.915017f, 0.729668f, 1.147657f, -0.368536f, 0.175810f, -0.335548f, -2.686982f, -1.155373f, -1.793351f };
static const float X20_MLP_L16_layer_1_weights[160] = { 0.836323f, 0.590537f, -2.636987f, 0.994883f, 1.584493f, -0.750939f, 0.874266f, 1.286255f, -1.112663f, 0.128576f, 1.468947f, 1.084384f, 0.050866f, -0.705755f, 1.373546f, -2.051504f, -1.972943f, -0.280093f, 0.468353f, -0.176518f, 4.342378f, -1.297444f, -2.219297f, -0.906271f, 1.163931f, 0.331832f, -0.527222f, -0.130869f, 1.038276f, -0.525183f, 1.070158f, -1.762925f, 1.003139f, -1.671211f, -3.737043f, -0.949828f, 1.566971f, 0.463458f, 0.613950f, 1.380131f, -2.130566f, -3.603895f, -1.869903f, 3.739454f, 0.832322f, 0.325111f, -0.591950f, 0.316417f, 0.920982f, 1.153001f, -1.430775f, 0.415807f, -2.557033f, -3.433200f, -0.564118f, 2.718764f, 0.161990f, 2.225068f, 0.149529f, 1.437055f, 1.763888f, -5.521047f, -0.648274f, 1.732252f, -1.019290f, 1.021917f, 1.373207f, -0.030465f, -0.214825f, 0.938806f, -3.769137f, -3.339924f, 1.835535f, -0.604408f, 0.591091f, 2.589940f, 0.756953f, 1.029283f, 1.079259f, -0.721252f, -1.178585f, -4.472030f, -0.058904f, 1.810462f, 3.170854f, -2.166355f, 1.287187f, 0.278624f, 0.359485f, 0.973722f, 3.005808f, -1.243863f, -1.822600f, 0.292152f, 1.505297f, -2.551903f, 2.406019f, -0.013826f, -0.343861f, -0.189860f, 4.107674f, -5.535590f, -1.368085f, 0.483028f, -1.573092f, 1.294029f, 1.335646f, 0.639469f, 1.431541f, 0.062585f, 8.298431f, -2.015212f, -1.857324f, -1.263483f, 0.160713f, -1.489138f, 0.187992f, -0.517016f, -0.195611f, -0.592375f, 1.496822f, -2.753629f, -1.982808f, 0.746422f, -0.521876f, 1.194664f, -1.839029f, 2.165481f, -0.466436f, 1.330316f, 0.428569f, -2.100114f, 1.831779f, -0.690735f, -2.262120f, 2.117941f, -0.119325f, 0.188684f, 0.511230f, -0.847506f, 4.215754f, -1.813547f, -1.336763f, -1.170550f, 0.420385f, -1.463323f, -2.246845f, 1.475471f, 0.101710f, 0.507243f, 0.561812f, 1.046143f, 4.239522f, -3.185790f, 0.253544f, -1.029682f, 1.346830f, -1.609370f, -1.413467f, -0.467657f };
static float X20_MLP_L16_buf1[16];
static float X20_MLP_L16_buf2[16];
static const EmlNetLayer X20_MLP_L16_layers[2] = { 
{ 16, 16, X20_MLP_L16_layer_0_weights, X20_MLP_L16_layer_0_biases, EmlNetActivationTanh }, 
{ 10, 16, X20_MLP_L16_layer_1_weights, X20_MLP_L16_layer_1_biases, EmlNetActivationSoftmax } };
static EmlNet X20_MLP_L16 = { 2, X20_MLP_L16_layers, X20_MLP_L16_buf1, X20_MLP_L16_buf2, 16 };

    int32_t
    X20_MLP_L16_predict(const float *features, int32_t n_features)
    {
        return eml_net_predict(&X20_MLP_L16, features, n_features);
    }
    

    int32_t
    X20_MLP_L16_regress(const float *features, int32_t n_features, float *out, int32_t out_length)
    {
        return eml_net_regress(&X20_MLP_L16, features, n_features, out, out_length);
    }
    

    float
    X20_MLP_L16_regress1(const float *features, int32_t n_features)
    {
        return eml_net_regress1(&X20_MLP_L16, features, n_features);
    }
    